{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a generate purpose REST API for interfacing with Git.",
    "title": "Git API.",
    "contact": {
      "name": "Ryan Lee",
      "url": "http://drdgvhbh.io",
      "email": "ryanleecode@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.2"
  },
  "host": "localhost",
  "basePath": "/v1",
  "paths": {
    "/repositories/{directory}/commit/{hash}": {
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "description": "This will get the specified commit in the specified repository.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Get commit",
        "operationId": "getCommit",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Directory",
            "description": "The directory of the repository",
            "name": "directory",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Hash",
            "description": "The hash of the commit",
            "name": "hash",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetCommitOkResponse"
          }
        }
      }
    },
    "/repositories/{directory}/commit/{hash}/changes": {
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "description": "This will get the changes of the specified commit in the specified repository.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "Get commit changes",
        "operationId": "getCommitChanges",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Directory",
            "description": "The directory of the repository",
            "name": "directory",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Hash",
            "description": "The hash of the commit",
            "name": "hash",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetCommitChangesOKResponse"
          }
        }
      }
    },
    "/repositories/{directory}/commits": {
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "description": "This will list the commit in the specified repository.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "List commits",
        "operationId": "listCommits",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Directory",
            "description": "The directory of the repository",
            "name": "directory",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetCommitsOkResponse"
          }
        }
      }
    },
    "/repositories/{directory}/references": {
      "get": {
        "security": [
          {
            "api_key": []
          }
        ],
        "description": "This will list the references in the specified repository.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "summary": "List references",
        "operationId": "listReferences",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Directory",
            "description": "The directory of the repository",
            "name": "directory",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetReferencesOkResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "Change": {
      "type": "object",
      "required": [
        "type",
        "path"
      ],
      "properties": {
        "path": {
          "description": "The relative file path in the repository",
          "type": "string",
          "x-go-name": "Path",
          "example": "lib/dart/example.dart"
        },
        "type": {
          "description": "The type of change",
          "type": "string",
          "enum": [
            "MODIFY",
            "INSERT",
            "DELETE"
          ],
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/drdgvhbh/gitserver/internal/repository/commit"
    },
    "Commit": {
      "type": "object",
      "required": [
        "hash",
        "author",
        "committer",
        "references"
      ],
      "properties": {
        "author": {
          "$ref": "#/definitions/Contributor"
        },
        "committer": {
          "$ref": "#/definitions/Contributor"
        },
        "hash": {
          "description": "The hash of the commit",
          "type": "string",
          "x-go-name": "Hash",
          "example": "e38e2cde1fada4a738f2461b283e561bc767568b"
        },
        "references": {
          "description": "The references pointing to this commit",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "References"
        },
        "summary": {
          "description": "The summary of the commit",
          "type": "string",
          "x-go-name": "Summary",
          "example": "Deletes swagger documentation from the repository"
        }
      },
      "x-go-package": "github.com/drdgvhbh/gitserver/internal/repository/commit"
    },
    "Contributor": {
      "type": "object",
      "required": [
        "name",
        "email",
        "timestamp"
      ],
      "properties": {
        "email": {
          "description": "Contributor's email",
          "type": "string",
          "x-go-name": "Email",
          "example": "ryanleecode@gmail.com"
        },
        "name": {
          "description": "Contributor's Name",
          "type": "string",
          "x-go-name": "Name",
          "example": "Ryan Lee"
        },
        "timestamp": {
          "description": "Timestamp of contribution",
          "type": "string",
          "x-go-name": "Timestamp",
          "example": "2019-05-26T12:41:18-04:00"
        }
      },
      "x-go-package": "github.com/drdgvhbh/gitserver/internal/repository/commit"
    },
    "Reference": {
      "type": "object",
      "required": [
        "hash",
        "name"
      ],
      "properties": {
        "hash": {
          "description": "The hash of the commit this reference points to",
          "type": "string",
          "x-go-name": "Hash",
          "example": "e38e2cde1fada4a738f2461b283e561bc767568b"
        },
        "name": {
          "description": "The name of the reference",
          "type": "string",
          "x-go-name": "Name",
          "example": "refs/heads/master"
        }
      },
      "x-go-package": "github.com/drdgvhbh/gitserver/internal/repository/reference"
    }
  },
  "responses": {
    "GetCommitChangesOKResponse": {
      "description": "Gets the diff between the specified commit and its primary parent",
      "schema": {
        "type": "object",
        "required": [
          "apiVersion",
          "id",
          "method",
          "data"
        ],
        "properties": {
          "apiVersion": {
            "description": "The API version",
            "type": "string",
            "x-go-name": "APIVersion",
            "example": "0.0.2"
          },
          "data": {
            "description": "The response data",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Change"
            },
            "x-go-name": "Data"
          },
          "id": {
            "description": "The request ID",
            "type": "string",
            "x-go-name": "ID",
            "example": "dc380b72-41c9-47bf-8be5-f3a7a493f4ca"
          },
          "method": {
            "description": "The request method",
            "type": "string",
            "x-go-name": "Method",
            "example": "repositories.%7Chome%7Cdrd%7Cgo%7Csrc%7Cgithub.com%7Cdrdgvhbh%7Cgitserver.commits.5dd5708f4c284919b1ef22f44e5d98f7d7579910.changes.get"
          }
        }
      }
    },
    "GetCommitOkResponse": {
      "description": "Gets the specified commit in the repository",
      "schema": {
        "type": "object",
        "required": [
          "apiVersion",
          "id",
          "method",
          "data"
        ],
        "properties": {
          "apiVersion": {
            "description": "The API version",
            "type": "string",
            "x-go-name": "APIVersion",
            "example": "0.0.2"
          },
          "data": {
            "description": "The response data",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Commit"
            },
            "x-go-name": "Data"
          },
          "id": {
            "description": "The request ID",
            "type": "string",
            "x-go-name": "ID",
            "example": "dc380b72-41c9-47bf-8be5-f3a7a493f4ca"
          },
          "method": {
            "description": "The request method",
            "type": "string",
            "x-go-name": "Method",
            "example": "repositories.%7Chome%7Cdrd%7Cgo%7Csrc%7Cgithub.com%7Cdrdgvhbh%7Cgitserver.commits.5dd5708f4c284919b1ef22f44e5d98f7d7579910.get"
          }
        }
      }
    },
    "GetCommitsOkResponse": {
      "description": "List of commits in the repository",
      "schema": {
        "type": "object",
        "required": [
          "apiVersion",
          "id",
          "method",
          "data"
        ],
        "properties": {
          "apiVersion": {
            "description": "The API version",
            "type": "string",
            "x-go-name": "APIVersion",
            "example": "0.0.2"
          },
          "data": {
            "description": "The response data",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Commit"
            },
            "x-go-name": "Data"
          },
          "id": {
            "description": "The request ID",
            "type": "string",
            "x-go-name": "ID",
            "example": "dc380b72-41c9-47bf-8be5-f3a7a493f4ca"
          },
          "method": {
            "description": "The request method",
            "type": "string",
            "x-go-name": "Method",
            "example": "repositories.%7Chome%7Cdrd%7Cgo%7Csrc%7Cgithub.com%7Cdrdgvhbh%7Cgitserver.commits.get"
          }
        }
      }
    },
    "GetReferencesOkResponse": {
      "description": "List of references in the repository",
      "schema": {
        "type": "object",
        "required": [
          "apiVersion",
          "id",
          "method",
          "data"
        ],
        "properties": {
          "apiVersion": {
            "description": "The API version",
            "type": "string",
            "x-go-name": "APIVersion",
            "example": "0.0.2"
          },
          "data": {
            "description": "The response data",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Reference"
            },
            "x-go-name": "Data"
          },
          "id": {
            "description": "The request ID",
            "type": "string",
            "x-go-name": "ID",
            "example": "dc380b72-41c9-47bf-8be5-f3a7a493f4ca"
          },
          "method": {
            "description": "The request method",
            "type": "string",
            "x-go-name": "Method",
            "example": "repositories.%7Chome%7Cdrd%7Cgo%7Csrc%7Cgithub.com%7Cdrdgvhbh%7Cgitserver.references.get"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ]
}